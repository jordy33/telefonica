# -*- coding:utf-8 -*-
from mako import runtime, filters, cache
UNDEFINED = runtime.UNDEFINED
STOP_RENDERING = runtime.STOP_RENDERING
__M_dict_builtin = dict
__M_locals_builtin = locals
_magic_number = 10
_modified_time = 1520275050.422494
_enable_loop = True
_template_filename = '/Users/jorgemacias/.virtualenvs/telefonica/lib/python2.7/site-packages/tgext/admin/templates/bootstrap_crud/get_all.mak'
_template_uri = '/Users/jorgemacias/.virtualenvs/telefonica/lib/python2.7/site-packages/tgext/admin/templates/bootstrap_crud/get_all.mak'
_source_encoding = 'utf-8'
from markupsafe import escape_silent as escape
_exports = ['title']


def _mako_get_namespace(context, name):
    try:
        return context.namespaces[(__name__, name)]
    except KeyError:
        _mako_generate_namespaces(context)
        return context.namespaces[(__name__, name)]
def _mako_generate_namespaces(context):
    pass
def _mako_inherit(template, context):
    _mako_generate_namespaces(context)
    return runtime._inherit_from(context, u'local:templates.master', _template_uri)
def render_body(context,**pageargs):
    __M_caller = context.caller_stack._push_frame()
    try:
        __M_locals = __M_dict_builtin(pageargs=pageargs)
        mount_point = context.get('mount_point', UNDEFINED)
        value_list = context.get('value_list', UNDEFINED)
        tmpl_context = context.get('tmpl_context', UNDEFINED)
        search_fields = context.get('search_fields', UNDEFINED)
        current_search = context.get('current_search', UNDEFINED)
        tg = context.get('tg', UNDEFINED)
        sorted = context.get('sorted', UNDEFINED)
        model = context.get('model', UNDEFINED)
        hasattr = context.get('hasattr', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n\n')
        __M_writer(u'\n\n')

        PAGER_ARGS = tmpl_context.make_pager_args(link=mount_point+'/',
                                                  page_link_template='<li><a%s>%s</a></li>',
                                                  page_plain_template='<li%s><span>%s</span></li>',
                                                  curpage_attr={'class': 'active'})
        
        
        __M_locals_builtin_stored = __M_locals_builtin()
        __M_locals.update(__M_dict_builtin([(__M_key, __M_locals_builtin_stored[__M_key]) for __M_key in ['PAGER_ARGS'] if __M_key in __M_locals_builtin_stored]))
        __M_writer(u'\n\n<div class="row">\n    <div class="col-md-2">\n')
        if hasattr(tmpl_context, 'menu_items'):
            __M_writer(u'        <ul class="nav crud-sidebar hidden-xs hidden-sm">\n')
            for lower, item in sorted(tmpl_context.menu_items.items()):
                __M_writer(u'            <li class="')
                __M_writer(escape(item==model and 'active' or ''))
                __M_writer(u'">\n                <a href="')
                __M_writer(escape(tmpl_context.crud_helpers.make_link(lower)))
                __M_writer(u'">')
                __M_writer(escape(item))
                __M_writer(u'</a>\n            </li>\n')
            __M_writer(u'        </ul>\n')
        __M_writer(u'    </div>\n\n    <div class="col-md-10">\n      <h1 class="page-header">')
        __M_writer(escape(model))
        __M_writer(u' Listing</h1>\n\n      <div class="row">\n        <div class="col-xs-3 col-md-2">\n          <a class="btn btn-success"\n             href=\'')
        __M_writer(escape(tg.url("new", params=tmpl_context.kept_params)))
        __M_writer(u"'>New ")
        __M_writer(escape(model))
        __M_writer(u'</a>\n        </div>\n\n        <div class="col-xs-9 col-md-3">\n')
        if tmpl_context.paginators:
            __M_writer(u'          <ul class="pagination pull-sm-right" style="margin:0;">\n            ')
            __M_writer(escape(tmpl_context.paginators.value_list.pager(**PAGER_ARGS)))
            __M_writer(u'\n          </ul>\n')
        __M_writer(u'        </div>\n\n        <div class="col-xs-12 col-md-7">\n          <div class="hidden-lg hidden-md">&nbsp;</div>\n')
        if search_fields:
            __M_writer(u'            <form class="form-inline pull-md-right">\n              <div class="form-group">\n                <select id="crud_search_field" class="form-control"\n                        onchange="crud_search_field_changed(this);">\n')
            for field, name, selected in search_fields:
                if selected is not False:
                    __M_writer(u'                      <option value="')
                    __M_writer(escape(field))
                    __M_writer(u'" selected="selected">')
                    __M_writer(escape(name))
                    __M_writer(u'</option>\n')
                else:
                    __M_writer(u'                      <option value="')
                    __M_writer(escape(field))
                    __M_writer(u'">')
                    __M_writer(escape(name))
                    __M_writer(u'</option>\n')
            __M_writer(u'                </select>\n              </div>\n\n              <div class="form-group">\n                <input id="crud_search_value" class="form-control" type="text"\n                       placeholder="equals / contains"\n                       name="')
            __M_writer(escape(current_search[0]))
            __M_writer(u'" value="')
            __M_writer(escape(current_search[1]))
            __M_writer(u'"/>\n              </div>\n\n              <button type="submit" class="btn btn-default">Search</button>\n            </form>\n')
        __M_writer(u'        </div>\n      </div>\n\n\n      <br/>\n\n      <div>\n        ')
        __M_writer(tmpl_context.widget(value=value_list, action=mount_point+'.json'))
        __M_writer(u'\n      </div>\n    </div>\n</div>')
        return ''
    finally:
        context.caller_stack._pop_frame()


def render_title(context):
    __M_caller = context.caller_stack._push_frame()
    try:
        model = context.get('model', UNDEFINED)
        tmpl_context = context.get('tmpl_context', UNDEFINED)
        __M_writer = context.writer()
        __M_writer(u'\n')
        __M_writer(escape(tmpl_context.title))
        __M_writer(u' - ')
        __M_writer(escape(model))
        __M_writer(u' Listing\n')
        return ''
    finally:
        context.caller_stack._pop_frame()


"""
__M_BEGIN_METADATA
{"source_encoding": "utf-8", "line_map": {"28": 0, "42": 1, "43": 5, "44": 7, "53": 12, "54": 16, "55": 17, "56": 18, "57": 19, "58": 19, "59": 19, "60": 20, "61": 20, "62": 20, "63": 20, "64": 23, "65": 25, "66": 28, "67": 28, "68": 33, "69": 33, "70": 33, "71": 33, "72": 37, "73": 38, "74": 39, "75": 39, "76": 42, "77": 46, "78": 47, "79": 51, "80": 52, "81": 53, "82": 53, "83": 53, "84": 53, "85": 53, "86": 54, "87": 55, "88": 55, "89": 55, "90": 55, "91": 55, "92": 58, "93": 64, "94": 64, "95": 64, "96": 64, "97": 70, "98": 77, "99": 77, "105": 3, "111": 3, "112": 4, "113": 4, "114": 4, "115": 4, "121": 115}, "uri": "/Users/jorgemacias/.virtualenvs/telefonica/lib/python2.7/site-packages/tgext/admin/templates/bootstrap_crud/get_all.mak", "filename": "/Users/jorgemacias/.virtualenvs/telefonica/lib/python2.7/site-packages/tgext/admin/templates/bootstrap_crud/get_all.mak"}
__M_END_METADATA
"""
